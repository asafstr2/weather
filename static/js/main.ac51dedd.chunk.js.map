{"version":3,"sources":["store/reducers/index.js","store/reducers/error.js","store/actionTypes.js","store/reducers/weather.js","store/reducers/location.js","store/reducers/favorite.js","store/actions/location.js","services/api.js","store/actions/error.js","store/actions/weather.js","component/AlertDialogSlide.js","component/Autocompleate.js","component/useDebounce.js","container/NewNavbar.js","component/WetherCard.js","container/Weather.js","store/actions/favorite.js","component/HomePage.js","component/Favorite.js","container/Main.js","hoc/isThereFav.js","container/App.js","store/index.js","serviceWorker.js","index.js","assets/icon.svg"],"names":["rootReducer","combineReducers","errors","state","messege","action","type","weather","location","favorite","JSON","parse","localStorage","getItem","stateSanitize","Set","map","stringify","setItem","neState","filter","stateFavorite","key","API_KEY","process","API_HOST","addLocation","apiCall","method","path","data","Promise","resolve","reject","axios","then","res","catch","err","response","error","addError","removeError","WeatherApiUrl","days","currentCityCode","fetchweather","currentCity","dispatch","DailyForecasts","Transition","React","forwardRef","props","ref","Slide","direction","AlertDialogSlide","content","useState","open","setOpen","handleClose","useEffect","Dialog","TransitionComponent","keepMounted","onClose","aria-labelledby","aria-describedby","DialogTitle","id","DialogContent","DialogContentText","style","color","DialogActions","Button","onClick","useStyles","makeStyles","container","display","headline","margin","list","border","connect","geo","searchTerm","setSearchTerm","results","setResults","isSearching","setIsSearching","classes","debouncedSearchTerm","value","delay","debouncedValue","setDebouncedValue","handler","setTimeout","clearTimeout","useDebounce","query","lat","lon","Key","text","LocalizedName","Country","ID","hundleClick","result","autocomplete","Autocomplete","onInputChange","event","newInputValue","placeholder","inputValue","onChange","newVlue","options","getOptionLabel","option","width","renderInput","params","TextField","label","variant","InputProps","endAdornment","Fragment","CircularProgress","size","className","navbar","background","marginBottom","fontWeight","opacity","transition","textDecoration","cursor","navbarBrand","height","borderRadius","links","NewNavbar","setGeo","navigator","geolocation","getCurrentPosition","position","coords","latitude","longitude","to","src","icon","alt","data-toggle","data-target","aria-controls","aria-expanded","aria-label","root","minWidth","marginRight","isFavorite","title","fontSize","pos","temp","WetherCard","Date","Temperature","IconPhrase","RainProbability","Link","deleteCard","maximum","Maximum","Value","Unit","minimum","Minimum","Card","CardContent","Typography","gutterBottom","moment","format","component","includes","CardActions","href","theme","cardRoot","flexWrap","wetherList","dailyWeather","i","Day","Rain","addFavorite","transform","header","letterSpacing","a","Container","justifyContent","removeFavorite","setstate","fav","history","useHistory","push","e","stopPropagation","hundledelete","mapDispatchToProps","withRouter","ComponentToBerendered","exact","render","Favorite","length","store","createStore","compose","applyMiddleware","thunk","App","maxWidth","Boolean","window","hostname","match","ReactDOM","StrictMode","document","getElementById","serviceWorker","ready","registration","unregister","console","message","module","exports"],"mappings":"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","file":"static/js/main.ac51dedd.chunk.js","sourcesContent":["import { combineReducers } from \"redux\";\r\nimport errors from \"./error\";\r\nimport location from \"./location\";\r\nimport  weather from \"./weather\";\r\nimport favorite from \"./favorite\"\r\n\r\n\r\n\r\n//making a root reducer from current user and error\r\nconst rootReducer = combineReducers({\r\n  errors,\r\n  weather,\r\n  location,\r\n  favorite\r\n});\r\n\r\nexport default rootReducer;\r\n","import { ADD_ERROR, REMOVE_ERROR } from \"../actionTypes\";\r\n\r\n//basic generic error handler\r\nexport default (state = { messege: null }, action) => {\r\n  switch (action.type) {\r\n    case ADD_ERROR:\r\n      return { ...state, messege: action.errors };\r\n    case REMOVE_ERROR:\r\n      return { ...state, messege: null };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","//making a const action type for easy editing later on\r\nexport const ADD_ERROR = \"ADD_ERROR\";\r\nexport const REMOVE_ERROR = \"REMOVE_ERROR\";\r\nexport const REMOVE_FAVORITE = \"REMOVE_FAVORITE\";\r\nexport const LOAD_WEATHER = \"LOAD_WEATHER\";\r\nexport const ADD_FAVORITE = \"ADD_FAVORITE\";\r\nexport const ADD_LOCATION = \"ADD_LOCATION\";\r\n","import { LOAD_WEATHER } from \"../actionTypes\";\r\n\r\nexport default (state = [], action) => {\r\n  switch (action.type) {\r\n    case LOAD_WEATHER:\r\n      return [...action.weather];\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import {\r\n  ADD_LOCATION\r\n} from \"../actionTypes\";\r\n\r\n\r\nexport default (state = {}, action) => {\r\n  switch (action.type) {\r\n    case ADD_LOCATION:\r\n      return action.location\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\n\r\n\r\n","import { ADD_FAVORITE, REMOVE_FAVORITE } from \"../actionTypes\";\r\n\r\nexport default (\r\n  state = JSON.parse(localStorage.getItem(\"fav\")) || [],\r\n  action\r\n) => {\r\n  switch (action.type) {\r\n    case ADD_FAVORITE:\r\n      //just making sure no duplicate\r\n      let stateSanitize = [\r\n        ...new Set([...state, action.favorite].map(JSON.stringify)),\r\n      ].map(JSON.parse);\r\n      //save to local storage\r\n      localStorage.setItem(\"fav\", JSON.stringify(stateSanitize));\r\n      return stateSanitize;\r\n    case REMOVE_FAVORITE:\r\n      let neState = [\r\n        ...state.filter((stateFavorite) => stateFavorite.key !== action.key),\r\n      ];\r\n      localStorage.setItem(\"fav\", JSON.stringify(neState));\r\n\r\n      return neState\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { ADD_LOCATION } from \"../actionTypes\";\r\n\r\nconst API_KEY = process.env.REACT_APP_API_KEY;\r\nconst API_HOST = \"http://dataservice.accuweather.com/\";\r\nconst API_VERSION = \"v1\";\r\n\r\nexport const addLocation = (location) => ({ type: ADD_LOCATION, location });\r\n\r\nexport const LocationApiUrlAuto = (query) =>\r\n  `${API_HOST}locations/${API_VERSION}/cities/autocomplete?apikey=${API_KEY}&q=${query}`;\r\n\r\nexport const LocationApiUrlGeo = (lat, lon) =>\r\n  `${API_HOST}locations/${API_VERSION}/cities/geoposition/search?apikey=${API_KEY}&q=${lat}%2C${lon}`;\r\n","import axios from \"axios\";\r\n\r\n/**\r\n * A warapper around axios API call that formats error\r\n * @param {string} method the HTTP verb you want to use like get post etc...\r\n * @param {string*} path the roue path/endpoint\r\n * @param {*object} data (optional) data in JSON format for POST requests\r\n */\r\n\r\n\r\nexport function apiCall(method, path, data) {\r\n  \r\n  return new Promise((resolve, reject) => {\r\n    return axios[method](path, data)\r\n      .then((res) => {\r\n        return resolve(res.data);\r\n      })\r\n      .catch((err) => {\r\n        return reject(err.response.data.error);\r\n      });\r\n  });\r\n}\r\n\r\n\r\n\r\n// export function setTokenHeader(token) {\r\n//   if (token) axios.defaults.headers.common[\"Authorization\"] = `Bearer ${token}`;\r\n//   else delete axios.defaults.headers.common[\"Authorization\"];\r\n// }\r\n\r\n// fetch(\r\n//   \"https://apiconsole-prod.apigee.net/smartdocs/v1/sendrequest?targeturl=http%3A%2F%2Fdataservice.accuweather.com%2Flocations%2Fv1%2Fcities%2Fautocomplete%3Fapikey%3DhnATJSBUdxRxGRgGte1FszJ6K7X9pJO3%26q%3Disrael&_=1594654635925\",\r\n//   {\r\n//     headers: {\r\n//       accept: \"*/*\",\r\n//       \"accept-language\": \"en-US,en;q=0.9,he-IL;q=0.8,he;q=0.7\",\r\n//       \"sec-fetch-dest\": \"empty\",\r\n//       \"sec-fetch-mode\": \"cors\",\r\n//       \"sec-fetch-site\": \"cross-site\",\r\n//     },\r\n//     referrer:\r\n//       \"https://developer.accuweather.com/accuweather-locations-api/apis/get/locations/v1/cities/autocomplete\",\r\n//     referrerPolicy: \"no-referrer-when-downgrade\",\r\n//     body: null,\r\n//     method: \"GET\",\r\n//     mode: \"cors\",\r\n//     credentials: \"omit\",\r\n//   }\r\n// );","import { ADD_ERROR, REMOVE_ERROR } from \"../actionTypes\";\r\n\r\nexport const addError = (errors) => ({\r\n  type: ADD_ERROR,\r\n  errors,\r\n});\r\n\r\nexport const removeError = () => ({\r\n  type: REMOVE_ERROR,\r\n});\r\n","import { apiCall } from \"../../services/api\";\r\nimport { LOAD_WEATHER } from \"../actionTypes\";\r\nimport { addError } from \"./error\";\r\nconst API_KEY = process.env.REACT_APP_API_KEY;\r\nconst API_HOST = \"http://dataservice.accuweather.com/\";\r\nconst API_VERSION = \"v1\";\r\n\r\nexport const loadweather = (weather) => ({ type: LOAD_WEATHER, weather });\r\n\r\nexport const WeatherApiUrl = (days, currentCityCode) =>\r\n  `${API_HOST}forecasts/${API_VERSION}/daily/${days}day/${currentCityCode}?apikey=${API_KEY}&details=true&metric=true`;\r\nexport function fetchweather(days, currentCity) {\r\n  return (dispatch) => {\r\n    return apiCall(\"get\", WeatherApiUrl(days, currentCity))\r\n      .then((res) => dispatch(loadweather(res.DailyForecasts)))\r\n      .catch((err) => dispatch(addError(err.messege)));\r\n  };\r\n}\r\n","import React,{useEffect} from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Slide from '@material-ui/core/Slide';\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n  return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\n\r\nexport default function AlertDialogSlide(props) {\r\n    const {content,removeError}=props\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n    removeError();\r\n  };\r\n\r\n  useEffect(() => {\r\n    if(content)\r\n    handleClickOpen()\r\n    \r\n  }, [content])\r\n\r\n\r\n  return (\r\n    <div>\r\n\r\n      <Dialog\r\n        open={open}\r\n        TransitionComponent={Transition}\r\n        keepMounted\r\n        onClose={handleClose}\r\n        aria-labelledby=\"alert-dialog-slide-title\"\r\n        aria-describedby=\"alert-dialog-slide-description\"\r\n      >\r\n        <DialogTitle id=\"alert-dialog-slide-title\">{\"Someting went wrong\"}</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText id=\"alert-dialog-slide-description\" style={{color:\"red\"}}>\r\n        {content}\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleClose} color=\"primary\">\r\n            OK\r\n          </Button> \r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}","import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  LocationApiUrlAuto,\r\n  LocationApiUrlGeo,\r\n  addLocation,\r\n} from \"../store/actions/location\";\r\nimport { fetchweather } from \"../store/actions/weather\";\r\nimport { connect } from \"react-redux\";\r\nimport useDebounce from \"./useDebounce\";\r\nimport { apiCall } from \"../services/api\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { removeError } from \"../store/actions/error\";\r\nimport AlertDialogSlide from \"./AlertDialogSlide\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\n\r\nconst useStyles = makeStyles({\r\n  container: {\r\n    display: \"flex\",\r\n  },\r\n  headline: {\r\n    margin: \"auto\",\r\n  },\r\n  list: {\r\n    border: \"1px solid black\",\r\n  },\r\n});\r\n\r\nfunction Autocompleate({\r\n  fetchweather,\r\n  geo,\r\n  addLocation,\r\n  errors,\r\n  removeError,\r\n}) {\r\n  const [searchTerm, setSearchTerm] = useState(\"\");\r\n  const [results, setResults] = useState([]);\r\n  const [isSearching, setIsSearching] = useState(false);\r\n  const classes = useStyles();\r\n\r\n  const debouncedSearchTerm = useDebounce(searchTerm, 300);\r\n\r\n  useEffect(() => {\r\n    if (debouncedSearchTerm) {\r\n      setIsSearching(true);\r\n      apiCall(\"get\", LocationApiUrlAuto(debouncedSearchTerm)).then(\r\n        (results) => {\r\n          setIsSearching(false);\r\n          setResults(results);\r\n        }\r\n      );\r\n    } else {\r\n      setResults([]);\r\n    }\r\n  }, [debouncedSearchTerm]);\r\n\r\n  useEffect(() => {\r\n    if (geo?.lon)\r\n      apiCall(\"get\", LocationApiUrlGeo(geo?.lat, geo?.lon)).then((results) => {\r\n        fetchweather(5, results.Key);\r\n        addLocation({\r\n          key: results.Key,\r\n          text: `${results.LocalizedName},${results.Country.ID}`,\r\n        });\r\n      });\r\n    //eslint-disable-next-line\r\n  }, [geo]);\r\n\r\n  const hundleClick = (result) => {\r\n    if (!result) return;\r\n    fetchweather(5, result.Key);\r\n    setSearchTerm(`${result.LocalizedName},${result.Country.ID}`);\r\n    addLocation({\r\n      key: result.Key,\r\n      text: `${result.LocalizedName},${result.Country.ID}`,\r\n    });\r\n  };\r\n\r\n  const autocomplete = (\r\n    <div>\r\n      {errors.messege && (\r\n        <AlertDialogSlide content={errors.messege} removeError={removeError} />\r\n      )}\r\n      <Autocomplete\r\n        onInputChange={(event, newInputValue) => {\r\n          setSearchTerm(newInputValue);\r\n        }}\r\n        placeholder={\"Search for a city\"}\r\n        inputValue={searchTerm}\r\n        onChange={(event, newVlue) => hundleClick(newVlue)}\r\n        id=\"combo\"\r\n        options={results}\r\n        onClick={() => hundleClick(results)}\r\n        getOptionLabel={(option) =>\r\n          `${option.LocalizedName},${option.Country.ID}`\r\n        }\r\n        style={{ width: 300 }}\r\n        renderInput={(params) => (\r\n          <TextField\r\n            {...params}\r\n            label={isSearching ? \"loading\" : \"Search for city\"}\r\n            variant=\"outlined\"\r\n            InputProps={{\r\n              ...params.InputProps,\r\n              endAdornment: (\r\n                <React.Fragment>\r\n                  {isSearching ? (\r\n                    <CircularProgress color=\"inherit\" size={20} />\r\n                  ) : null}\r\n                  {params.InputProps.endAdornment}\r\n                </React.Fragment>\r\n              ),\r\n            }}\r\n          />\r\n        )}\r\n      />\r\n    </div>\r\n  );\r\n\r\n  return <div className={classes.container}>{autocomplete}</div>;\r\n}\r\n\r\nfunction mapStateToProp(state) {\r\n  return {\r\n    location: state.location,\r\n    errors: state.errors,\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProp, {\r\n  fetchweather,\r\n  addLocation,\r\n  removeError,\r\n})(Autocompleate);\r\n","import { useState, useEffect } from \"react\";\r\n\r\nexport default function useDebounce(value, delay) {\r\n  const [debouncedValue, setDebouncedValue] = useState(value);\r\n\r\n  useEffect(\r\n    () => {\r\n      const handler = setTimeout(() => {\r\n        setDebouncedValue(value);\r\n      }, delay);\r\n\r\n      return () => {\r\n        clearTimeout(handler);\r\n      };\r\n    },\r\n    // eslint-disable-next-line\r\n    [value]\r\n  );\r\n\r\n  return debouncedValue;\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport icon from \"../assets/icon.svg\";\r\nimport Autocompleate from \"../component/Autocompleate\";\r\n\r\nconst useStyles = makeStyles({\r\n  navbar: {\r\n    background:\r\n      \" radial-gradient(circle, rgba(253,133,29,1) 0%, rgba(252,204,69,0.9447129193474265) 100%)\",\r\n    marginBottom: \"1rem\",\r\n    \"& a\": {\r\n      color: \"black\",\r\n      fontWeight: \"bold\",\r\n      opacity: \"0.6\",\r\n      transition: \"0.3s\",\r\n      \"&:hover\": {\r\n        opacity: \"1\",\r\n        textDecoration: \"none\",\r\n        cursor: \"pointer\",\r\n      },\r\n    },\r\n  },\r\n\r\n  navbarBrand: {\r\n    \"& img\": {\r\n      display: \"inline-block\",\r\n      width: 40,\r\n      height: 40,\r\n      borderRadius: \"2px\",\r\n      margin: \"5px\",\r\n    },\r\n  },\r\n  links: {\r\n    \"& li\": {\r\n      margin: \"0 3px 0 3px\",\r\n    },\r\n  },\r\n});\r\nexport default function NewNavbar() {\r\n  const [geo, setGeo] = useState();\r\n\r\n  const classes = useStyles();\r\n  useEffect(() => {\r\n    navigator.geolocation.getCurrentPosition(function (position) {\r\n      setGeo({\r\n        lat: position.coords.latitude,\r\n        lon: position.coords.longitude,\r\n      });\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <nav\r\n      className={`navbar navbar-expand-lg navbar-light bg-light ${classes.navbar}`}\r\n    >\r\n      {/* eslint-disable-next-line  */}\r\n      <span className=\"navbar-brand\">\r\n        <NavLink to=\"/\" className={`navbar-brand ${classes.navbarBrand}`}>\r\n          <img src={icon} alt=\"weather icon\"></img>\r\n        </NavLink>\r\n      </span>\r\n      <button\r\n        className=\"navbar-toggler\"\r\n        type=\"button\"\r\n        data-toggle=\"collapse\"\r\n        data-target=\"#navbarSupportedContent\"\r\n        aria-controls=\"navbarSupportedContent\"\r\n        aria-expanded=\"false\"\r\n        aria-label=\"Toggle navigation\"\r\n      >\r\n        <span className=\"navbar-toggler-icon\"></span>\r\n      </button>\r\n\r\n      <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n        <ul className=\"navbar-nav mr-auto\">\r\n          <li className=\"nav-item active\">\r\n            <NavLink className=\"nav-link\" to=\"/\">\r\n              Home <span className=\"sr-only\">(current)</span>\r\n            </NavLink>\r\n          </li>\r\n          <li className=\"nav-item\">\r\n            {/* eslint-disable-next-line  */}\r\n            <span className=\"nav-link\">\r\n              <NavLink to=\"/favorite\">Favorite</NavLink>\r\n            </span>\r\n          </li>\r\n        </ul>\r\n        <form className=\"form-inline my-2 my-lg-0\">\r\n          <Autocompleate geo={geo} />\r\n        </form>\r\n      </div>\r\n    </nav>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardActions from \"@material-ui/core/CardActions\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { Sunny, Cloudy, Rain as Rainy, Snow } from \"weather-styled-icon\";\r\n\r\nimport moment from \"moment\";\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    minWidth: 300,\r\n    marginBottom: 50,\r\n    marginRight: 20,\r\n    \"&:hover\": {\r\n      cursor: (isFavorite) => (isFavorite ? \"pointer\" : \"\"),\r\n    },\r\n  },\r\n\r\n  title: {\r\n    fontSize: 14,\r\n  },\r\n  pos: {\r\n    marginBottom: 50,\r\n  },\r\n  temp: {\r\n    fontSize: 10,\r\n  },\r\n});\r\n\r\nexport default function WetherCard({\r\n  Date,\r\n  Temperature,\r\n  IconPhrase,\r\n  RainProbability,\r\n  Link,\r\n  favorite,\r\n  hundleClick,\r\n  isFavorite,\r\n  deleteCard\r\n}) {\r\n  const maximum = `${Temperature.Maximum.Value}${Temperature.Maximum.Unit}`;\r\n  const minimum = `${Temperature.Minimum.Value}${Temperature.Minimum.Unit}`;\r\n\r\n  const icon = () => {\r\n    if (IconPhrase.includes(\"un\")) return <Sunny />;\r\n    if (IconPhrase.includes(\"loud\")) return <Cloudy />;\r\n    if (IconPhrase.includes(\"ain\") || IconPhrase.includes(\"howers\"))\r\n      return <Rainy />;\r\n    if (IconPhrase.includes(\"now\")) return <Snow />;\r\n  };\r\n\r\n  const classes = useStyles(isFavorite);\r\n\r\n  return (\r\n    <Card className={classes.root} onClick={hundleClick}>\r\n      <CardContent>\r\n        <Typography\r\n          className={classes.title}\r\n          color=\"textSecondary\"\r\n          gutterBottom\r\n        >\r\n          {moment(Date).format(\"DD/MM/YY\")}\r\n        </Typography>\r\n        <Typography\r\n          className={classes.title}\r\n          color=\"textSecondary\"\r\n          gutterBottom\r\n        >\r\n          {favorite && favorite}\r\n        </Typography>\r\n        <Typography variant=\"h5\" component=\"h2\">\r\n          {IconPhrase}\r\n        </Typography>\r\n        {icon()}\r\n        <Typography className={classes.pos} color=\"textSecondary\">\r\n          Rain Probability: {RainProbability}\r\n        </Typography>\r\n        <Typography variant=\"body2\" component=\"p\" display=\"inline\">\r\n          {maximum}\r\n        </Typography>\r\n        <Typography\r\n          color=\"textSecondary\"\r\n          display=\"inline\"\r\n          className={classes.temp}\r\n        >\r\n          ` HI`\r\n        </Typography>\r\n        <br></br>\r\n        <Typography variant=\"body2\" component=\"p\" display=\"inline\">\r\n          {minimum}\r\n        </Typography>\r\n        <Typography\r\n          color=\"textSecondary\"\r\n          display=\"inline\"\r\n          className={classes.temp}\r\n        >\r\n          ` LO`\r\n        </Typography>\r\n      </CardContent>\r\n      <CardActions>\r\n        <Button size=\"small\" href={Link}>\r\n          Learn More\r\n        </Button>\r\n\r\n        {isFavorite && (\r\n          <Button size=\"small\" onClick={deleteCard}>\r\n            x\r\n          </Button>\r\n        )}\r\n      </CardActions>\r\n    </Card>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { fetchweather } from \"../store/actions/weather\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { connect } from \"react-redux\";\r\nimport WetherCard from \"../component/WetherCard\";\r\nconst useStyles = makeStyles((theme) => ({\r\n  cardRoot: {\r\n    display: \"flex\",\r\n    flexWrap: \"wrap\",\r\n    \r\n  },\r\n}));\r\nfunction Weather({ weather }) {\r\n  const classes = useStyles();\r\n  const wetherList = weather.map((dailyWeather, i) => {\r\n    const { Date, Temperature, Day, Link } = dailyWeather;\r\n    const { Rain, RainProbability } = Day;\r\n    return (\r\n      <WetherCard\r\n        key={i}\r\n        Date={Date}\r\n        Temperature={Temperature}\r\n        IconPhrase={Day.IconPhrase}\r\n        Rain={Rain.Value}\r\n        RainProbability={RainProbability}\r\n        Link={Link}\r\n        isFavorite={false}\r\n      />\r\n    );\r\n  });\r\n\r\n  return <div className={classes.cardRoot}>{wetherList}</div>;\r\n}\r\n\r\nfunction mapStateToProp(state) {\r\n  return {\r\n    weather: state.weather,\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProp, { fetchweather })(Weather);\r\n","import { ADD_FAVORITE,REMOVE_FAVORITE } from \"../actionTypes\";\r\nimport { addError } from \"./error\";\r\n\r\n\r\nexport const addFavorite = (favorite) => ({ type: ADD_FAVORITE, favorite });\r\n\r\nexport const removeFavorite = (key) => ({ type: REMOVE_FAVORITE, key });\r\n\r\n\r\n\r\n\r\nexport function addFavoriteToLocal(favorite) {\r\n  return async (dispatch) => {\r\n    try {\r\n      let fromLocal = await JSON.parse(localStorage.getItem(\"fav\")).concat(\r\n        favorite\r\n      );\r\n      await localStorage.setItem(\"fav\", JSON.stringify(fromLocal));\r\n      return dispatch(addFavorite(fromLocal));\r\n    } catch (err) {\r\n      dispatch(addError(err.messege));\r\n    }\r\n  };\r\n}\r\n","import React from \"react\";\r\nimport Weather from \"../container/Weather\";\r\nimport { connect } from \"react-redux\";\r\nimport { addFavorite } from \"../store/actions/favorite\";\r\nimport FavoriteBorderIcon from \"@material-ui/icons/FavoriteBorder\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { removeError } from \"../store/actions/error\";\r\nimport AlertDialogSlide  from \"./AlertDialogSlide\"\r\nconst useStyles = makeStyles({\r\n  headline: {\r\n    display: \"flex\",\r\n    marginBottom: 10,\r\n    \"& a\": {\r\n      marginRight: \"auto\",\r\n      \"& svg\": {\r\n        color: \"red\",\r\n        fontSize: \"2rem\",\r\n      },\r\n      \"& :hover\": {\r\n        transform: \"scale(1.1)\",\r\n        transition: \"all 0.6s\",\r\n      },\r\n    },\r\n  },\r\n  header: {\r\n    marginRight: 10,\r\n    letterSpacing:2\r\n  },\r\n});\r\n\r\nfunction HomePage({ location, addFavorite ,errors}) {\r\n  const classes = useStyles();\r\n\r\n  const hundleClick = async () => {\r\n    addFavorite(location);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {errors.messege && (\r\n        <AlertDialogSlide content={errors.messege} removeError={removeError} />\r\n      )}\r\n      <div className={classes.Container}></div>\r\n      <div className={classes.headline}>\r\n        <h1 className={classes.header}>{location.text}</h1>\r\n        {location?.text ? (\r\n          <NavLink size=\"small\" to=\"/favorite\">\r\n            <FavoriteBorderIcon onClick={hundleClick} />\r\n          </NavLink>\r\n        ) : (\r\n          <h1>\r\n            Location is off or not allowed from this divice but you can still\r\n            search for a city in the NavBar\r\n          </h1>\r\n        )}\r\n      </div>\r\n      <Weather />\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction mapStateToProp(state) {\r\n  return {\r\n    location: state.location,\r\n    errors: state.errors,\r\n  };\r\n}\r\nexport default connect(mapStateToProp, { addFavorite, removeError })(HomePage);\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { connect } from \"react-redux\";\r\nimport WetherCard from \"../component/WetherCard\";\r\nimport { apiCall } from \"../services/api\";\r\nimport { WeatherApiUrl, fetchweather } from \"../store/actions/weather\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { addLocation } from \"../store/actions/location\";\r\nimport {removeFavorite} from \"../store/actions/favorite\"\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  cardRoot: {\r\n    display: \"flex\",\r\n    flexWrap: \"wrap\",\r\n    justifyContent: \"space-between\",\r\n  },\r\n}));\r\nfunction Favorite({ favorite, fetchweather,addLocation ,removeFavorite}) {\r\n  const [state, setstate] = useState([]);\r\n\r\n  useEffect(() => {\r\n    setstate([])\r\n    try {\r\n      favorite.map((fav) =>\r\n        apiCall(\"get\", WeatherApiUrl(1, fav.key)).then((res) => {\r\n          setstate((state) => [...state, res.DailyForecasts[0]]);\r\n        })\r\n      );\r\n    } catch (error) {}\r\n  }, [favorite]);\r\n  let history = useHistory();\r\n  const classes = useStyles();\r\n\r\n  const hundledelete = (key,e) => {\r\n    e.stopPropagation();\r\n    removeFavorite(key)\r\n  };\r\n  const hundleClick = (key, text) => {\r\n    fetchweather(5, key);\r\n    addLocation({\r\n      key,\r\n      text,\r\n    });\r\n    history.push(\"/\");\r\n  };\r\n\r\n  const wetherList = state?.map((dailyWeather, i) => {\r\n    const { Date, Temperature, Day, Link } = dailyWeather;\r\n    const { Rain, RainProbability } = Day;\r\n    return (\r\n      <WetherCard\r\n        favorite={favorite[i]?.text}\r\n        key={favorite[i]?.key}\r\n        Date={Date}\r\n        Temperature={Temperature}\r\n        IconPhrase={Day.IconPhrase}\r\n        Rain={Rain.Value}\r\n        RainProbability={RainProbability}\r\n        Link={Link}\r\n        hundleClick={() => hundleClick(favorite[i]?.key, favorite[i]?.text)}\r\n        deleteCard={(e) => hundledelete(favorite[i]?.key, e)}\r\n        isFavorite={true}\r\n      />\r\n    );\r\n  });\r\n\r\n  return (\r\n    <div className={classes.cardRoot}>\r\n      {state ? wetherList : <div>loading</div>}\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction mapStateToProp(state) {\r\n  return {\r\n    favorite: state.favorite,\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProp, { fetchweather ,addLocation,removeFavorite})(Favorite);\r\n","import React from \"react\";\r\nimport { Switch, Route, withRouter } from \"react-router-dom\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { connect } from \"react-redux\";\r\nimport HomePage from \"../component/HomePage\";\r\nimport Favorite from \"../component/Favorite\";\r\nimport { removeError } from \"../store/actions/error\";\r\nimport isThereFav from \"../hoc/isThereFav\";\r\nconst useStyles = makeStyles({\r\n  container: {},\r\n});\r\n\r\nfunction Main({ errors, removeError }) {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.container}>\r\n      <Switch>\r\n        <Route\r\n          exact\r\n          path=\"/\"\r\n          render={(props) => (\r\n            <HomePage {...props} errors={errors} removeError={removeError} />\r\n          )}\r\n        ></Route>\r\n\r\n        <Route exact path=\"/favorite\" component={isThereFav(Favorite)}></Route>\r\n      </Switch>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    errors: state.errors, //contain the error from the server if any\r\n  };\r\n}\r\nconst mapDispatchToProps = {\r\n  removeError,\r\n};\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Main));\r\n","import React, { useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nexport default function isThereFav(ComponentToBerendered) {\r\n  return connect(mapStateToProps)(Favorite);\r\n  function Favorite({ favorite, history }, props) {\r\n    useEffect(() => {\r\n      if (favorite.length<1) history.push(\"/\");\r\n\r\n      // eslint-disable-next-line\r\n    }, [favorite]);\r\n    return <ComponentToBerendered {...props} />;\r\n  }\r\n  function mapStateToProps(state) {\r\n    return {\r\n      favorite: state.favorite,\r\n    };\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport { Provider } from \"react-redux\";\r\nimport { configureStore } from \"../store\";\r\nimport { BrowserRouter as Router } from \"react-router-dom\";\r\nimport NewNavbar from \"./NewNavbar\";\r\nimport Main from \"./Main\";\r\nimport { Container } from \"@material-ui/core\";\r\nimport \"bootstrap/dist/css/bootstrap.css\";\r\nimport \"bootstrap/dist/js/bootstrap.bundle\";\r\n\r\nconst store = configureStore();\r\n\r\nconst App = () => (\r\n  <Provider store={store}>\r\n    <Router>\r\n      <div style={{background:\"#f5f5f5\"}}>\r\n        <NewNavbar />\r\n        <Container maxWidth=\"lg\" >\r\n            <Main />\r\n        </Container>\r\n      </div>\r\n    </Router>\r\n  </Provider>\r\n);\r\n\r\nexport default App;\r\n","import rootReducer from \"./reducers/index\";\r\nimport { createStore, applyMiddleware, compose } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\n\r\nexport function configureStore() {\r\n  return createStore(\r\n    rootReducer,\r\n    compose(\r\n      applyMiddleware(thunk),\r\n      // window.__REDUX_DEVTOOLS_EXTENSION__ &&\r\n      //   window.__REDUX_DEVTOOLS_EXTENSION__()\r\n    )\r\n  );\r\n}\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './container/App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","module.exports = __webpack_public_path__ + \"static/media/icon.9716e0df.svg\";"],"sourceRoot":""}